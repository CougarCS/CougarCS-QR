{"version":3,"sources":["components/QR/QR.js","App.js","reportWebVitals.js","index.js"],"names":["QR","props","qrOptions","fgColor","bgColor","level","includeMargin","size","imageSettings","src","width","height","excavate","className","value","App","useState","setValue","onSubmit","e","preventDefault","field","target","name","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PA2BeA,EAxBJ,SAACC,GACX,IAOMC,EAAY,CACjBC,QAAS,UACTC,QAAS,UACTC,MAAO,IACPC,eAAe,EACfC,KAAM,IACNC,cAba,CACbC,IAAK,cACLC,MAAO,GACPC,OAAQ,GACRC,UAAU,IAYX,OACC,qBAAKC,UAAU,KAAf,SACC,cAAC,IAAD,aAAQC,MAAOb,EAAMa,OAAWZ,OCSpBa,MA3Bf,WAEC,MAA0BC,mBAAS,wBAAnC,mBAAOF,EAAP,KAAcG,EAAd,KASG,OACF,qCACC,qBAAKJ,UAAU,YAAf,SACC,uBAAMK,SAVY,SAACC,GACrBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAO,GACvBL,EAASI,EAAMP,OAAS,wBACxBO,EAAMP,MAAQ,IAMZ,UACC,uBAAOS,KAAK,QAAQC,YAAY,uBAChC,iDAGF,sBAAKX,UAAU,YAAf,UACC,cAAC,EAAD,CAAIC,MAAOA,IACX,4BAAIA,WCbOW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ce72e61b.chunk.js","sourcesContent":["import React from 'react';\nimport QRCode from 'qrcode.react';\n\nconst QR = (props) => {\n\tconst image = {\n\t\tsrc: \"/cougar.png\",\n\t\twidth: 65,\n\t\theight: 65,\n\t\texcavate: true\n\t}\n \n\tconst qrOptions = {\n\t\tfgColor: \"#ec1c24\",\n\t\tbgColor: \"#f5f5f5\",\n\t\tlevel: \"H\",\n\t\tincludeMargin: false,\n\t\tsize: 260,\n\t\timageSettings: image\n\t}\n\t\n\treturn (\n\t\t<div className=\"QR\">\n\t\t\t<QRCode value={props.value} {...qrOptions} />\n\t\t</div>\n\t);\n}\n\nexport default QR;\n","import './App.css';\nimport QR from './components/QR/QR';\nimport {useState} from \"react\"\n\nfunction App() {\n\n\tconst [value, setValue] = useState(\"https://cougarcs.com\");\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault()\n\t\tconst field = e.target[0]\n\t\tsetValue(field.value || \"https://cougarcs.com\")\n\t\tfield.value = \"\"\n\t}\n\n    return (\n\t\t<>\n\t\t\t<div className=\"container\">\n\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t<input name=\"value\" placeholder=\"Enter URL or UH ID\" />\n\t\t\t\t\t<button>&rarr;</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t<div className=\"container\">\n\t\t\t\t<QR value={value} />\n\t\t\t\t<p>{value}</p>\n\t\t\t</div>\n\t\t</>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}